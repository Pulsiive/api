// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(uuid())
  email    String @unique
  password String
}

model User {
  id              String           @id @default(uuid())
  firstName       String
  lastName        String
  email           String           @unique
  password        String
  dateOfBirth     DateTime
  balance         Int              @default(0)
  timeZone        String
  vehicles        Vehicle[]
  privateStations Station[]
  comments        StationComment[]
  orders          Order[]
}

model PasswordReset {
  id        String   @id @default(uuid())
  token     String
  email     String   @unique
  createdAt DateTime @default(now())
}

model Vehicle {
  id        String      @id @default(uuid())
  owner     User        @relation(fields: [ownerId], references: [id])
  ownerId   String
  type      VehicleType @default(CAR)
  plugTypes PlugType[]
  electricalType VehicleElectricalType
  maxPower  Decimal
}

model Station {
  id          String              @id @default(uuid())
  owner       User                @relation(fields: [ownerId], references: [id])
  ownerId     String
  order       Order               @relation(fields: [orderId], references: [id])
  orderId     String              @unique
  rate        Int
  coordinates StationCoordinates?
  properties  StationProperties?
  comments    StationComment[]
}

model StationCoordinates {
  id          String  @id @default(uuid())
  station     Station @relation(fields: [stationId], references: [id])
  stationId   String  @unique
  lat         Decimal
  long        Decimal
  address     String
  city        String
  country     String
  countryCode String
}

model StationProperties {
  id               String         @id @default(uuid())
  station          Station        @relation(fields: [stationId], references: [id])
  stationId        String         @unique
  isPublic         Boolean
  maxPower         Decimal
  price            Int
  nbChargingPoints Int
  isGreenEnergy    Boolean
  plugTypes        PlugType[]
  hours            StationHours[]
}

model StationHours {
  id                  String            @id @default(uuid())
  stationProperties   StationProperties @relation(fields: [stationPropertiesId], references: [id])
  stationPropertiesId String
  day                 Int
  openTime            DateTime
  closeTime           DateTime
}

model StationComment {
  id        String   @id @default(uuid())
  station   Station  @relation(fields: [stationId], references: [id])
  stationId String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  rate      Int
  body      String
  pictures  String[]
  dates     DateTime
  likes     Int
}

model Order {
  id         String   @id @default(uuid())
  customer   User     @relation(fields: [customerId], references: [id])
  customerId String
  station    Station?
  date       DateTime
  price      Int
}

enum VehicleType {
  CAR
  SCOOTER
  MOTORBIKE
  BIKE
}

enum VehicleElectricalType {
  BEV
  HEV
  PHEV
}

enum PlugType {
  TYPE1
  TYPE2
  TYPE3
  CCS
  CHADEMO
  GREENUP
}
